{"o_errors":[],"o_vars":null,"o_bots":[{"spanInfo":{"startLine":24,"endLine":24,"endCol":8,"startCol":5,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},{"spanInfo":{"startLine":33,"endLine":33,"endCol":10,"startCol":7,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true}],"o_types":[[{"spanInfo":{"startLine":73,"endLine":73,"endCol":24,"startCol":23,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":39,"startCol":18,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","[Char]"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":20,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.one_plus_one_eq_two","{v : Bool | Prop v}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":9,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.propFail","{VV : Bool | VV /= GHC.Types.False\n             && VV /= GHC.Types.False\n             && Prop VV}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":31,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Bool"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":29,"startCol":27,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == x2}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":33,"startCol":19,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Double"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":29,"startCol":24,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Integer"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":24,"startCol":23,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":40,"startCol":18,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","[Char]"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":8,"startCol":5,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["str","{VV : [Char] | false}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":4,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.die","{VV : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":26,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Integer"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":34,"startCol":32,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == x2}"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":6,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.fixme","{VV : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":39,"startCol":14,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.die","{v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":61,"startCol":20,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","[Char]"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":36,"startCol":17,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.die","{v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":34,"startCol":14,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["n","{v : Double | v == n}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":29,"startCol":28,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":17,"startCol":16,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Double -> x2:{v : Double | v /= 0} -> {v : Double | v == x1 / x2}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":31,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Integer"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":36,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","[Char]"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":32,"startCol":30,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == x2}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":8,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.lAssert","{v : Bool | Prop v} -> {v : Bool | Prop v}"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":68,"startCol":13,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["GHC.Err.error","[Char] -> a"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":10,"startCol":7,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["str","{VV : [Char] | false}"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":67,"startCol":20,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","[Char]"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":19,"startCol":12,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"{v : {v : Bool | Prop v} -> {v : Bool | Prop v} | v == Assert.lAssert}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":31,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Bool"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":33,"startCol":18,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","[Char]"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":29,"startCol":27,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == x2}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":31,"startCol":19,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Int -> {v : Double | v == x1}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":19,"startCol":12,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"{v : {v : Bool | Prop v} -> {v : Bool | Prop v} | v == Assert.lAssert}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":41,"startCol":11,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["GHC.Err.error","[Char] -> a"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":9,"startCol":8,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["n","Double"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":36,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{v : Integer | v == 3}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":34,"startCol":24,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{v : Integer | v == 2}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":7,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.divide","Double -> {v : Int | v /= 0} -> Double"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":7,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.propOk","{VV : Bool | VV /= GHC.Types.False\n             && VV /= GHC.Types.False\n             && Prop VV}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":26,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","Integer"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":27,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":22,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.one_plus_one_eq_three","{v : Bool | Prop v}"]]]],"o_templs":[[{"spanInfo":{"startLine":73,"endLine":73,"endCol":24,"startCol":23,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##467:Integer -> lq_tmp$x##468:Integer -> {lq_tmp$x##470 : Integer^\"lq_tmp$x##469\" | lq_tmp$x##470 == lq_tmp$x##467 + lq_tmp$x##468}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":39,"startCol":18,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##615 : [Char] | lq_tmp$x##615 ~~ lq_anf$##d113\n                          && len lq_tmp$x##615 == strLen lq_anf$##d113}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":20,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.one_plus_one_eq_two","{v##4 : Bool | Prop v##4}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":9,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.propFail","{VV##501 : Bool^\"lq_tmp$x##503\" | $k_$35$$35$502}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":31,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##479 : Bool | Prop lq_tmp$x##479 <=> lq_anf$##d10S == lq_anf$##d10T}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":29,"startCol":27,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##484:{lq_tmp$x##489 : Integer^\"lq_tmp$x##488\" | $k_$35$$35$487[VV$35$$35$486:=lq_tmp$36$x$35$$35$489][lq_tmp$36$x$35$$35$483:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT]} -> lq_tmp$x##485:{lq_tmp$x##489 : Integer^\"lq_tmp$x##488\" | $k_$35$$35$487[VV$35$$35$486:=lq_tmp$36$x$35$$35$489][lq_tmp$36$x$35$$35$483:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT]} -> {lq_tmp$x##479 : Bool | Prop lq_tmp$x##479 <=> lq_tmp$x##484 == lq_tmp$x##485}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":33,"startCol":19,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##586 : Double^\"lq_tmp$x##585\" | lq_tmp$x##586 == ds_d10v}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":29,"startCol":24,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##289 : Integer^\"lq_tmp$x##288\" | lq_tmp$x##289 == lq_anf$##d10D + lq_anf$##d10E}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":24,"startCol":23,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##513:Integer -> lq_tmp$x##514:Integer -> {lq_tmp$x##516 : Integer^\"lq_tmp$x##515\" | lq_tmp$x##516 == lq_tmp$x##513 + lq_tmp$x##514}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":40,"startCol":18,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##382 : [{lq_tmp$x##390 : Char^\"lq_tmp$x##389\" | $k_$35$$35$388[lq_tmp$36$x$35$$35$386:=str$35$$35$aXo][lq_tmp$36$x$35$$35$385:=lq_anf$36$$35$$35$d10L][VV$35$$35$387:=lq_tmp$36$x$35$$35$390]}] | len lq_tmp$x##382 == len lq_anf$##d10L + len str##aXo}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":8,"startCol":5,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["str","{VV : [Char] | false}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":4,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.die","lq_tmp$x##364:{VV : [Char] | false} -> t"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":26,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##470 : Integer^\"lq_tmp$x##469\" | lq_tmp$x##470 == lq_anf$##d10Q + lq_anf$##d10R}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":34,"startCol":32,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##266:{lq_tmp$x##271 : Integer^\"lq_tmp$x##270\" | $k_$35$$35$269[lq_tmp$36$x$35$$35$265:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT][VV$35$$35$268:=lq_tmp$36$x$35$$35$271]} -> lq_tmp$x##267:{lq_tmp$x##271 : Integer^\"lq_tmp$x##270\" | $k_$35$$35$269[lq_tmp$36$x$35$$35$265:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT][VV$35$$35$268:=lq_tmp$36$x$35$$35$271]} -> {lq_tmp$x##261 : Bool | Prop lq_tmp$x##261 <=> lq_tmp$x##266 == lq_tmp$x##267}"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":6,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.fixme","lq_tmp$x##314:{VV : [Char] | false} -> t"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":39,"startCol":14,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.die","lq_tmp$x##625:{lq_tmp$x##623 : [Char] | false} -> t"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":61,"startCol":20,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##322 : [Char] | lq_tmp$x##322 ~~ lq_anf$##d10H\n                          && len lq_tmp$x##322 == strLen lq_anf$##d10H}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":36,"startCol":17,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.die","lq_tmp$x##439:{lq_tmp$x##437 : [Char] | false} -> t"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":34,"startCol":14,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["n","{lq_tmp$x##604 : Double | lq_tmp$x##604 == n##aXq}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":29,"startCol":28,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##249:Integer -> lq_tmp$x##250:Integer -> {lq_tmp$x##252 : Integer^\"lq_tmp$x##251\" | lq_tmp$x##252 == lq_tmp$x##249 + lq_tmp$x##250}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":17,"startCol":16,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##598:Double -> lq_tmp$x##599:{lq_tmp$x##601 : Double^\"lq_tmp$x##600\" | lq_tmp$x##601 /= 0} -> {lq_tmp$x##601 : Double^\"lq_tmp$x##600\" | lq_tmp$x##601 == lq_tmp$x##598 / lq_tmp$x##599}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":31,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##252 : Integer^\"lq_tmp$x##251\" | lq_tmp$x##252 == lq_anf$##d10z + lq_anf$##d10A}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":36,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##429 : [Char] | lq_tmp$x##429 ~~ lq_anf$##d10O\n                          && len lq_tmp$x##429 == strLen lq_anf$##d10O}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":32,"startCol":30,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##303:{lq_tmp$x##308 : Integer^\"lq_tmp$x##307\" | $k_$35$$35$306[lq_tmp$36$x$35$$35$302:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT][VV$35$$35$305:=lq_tmp$36$x$35$$35$308]} -> lq_tmp$x##304:{lq_tmp$x##308 : Integer^\"lq_tmp$x##307\" | $k_$35$$35$306[lq_tmp$36$x$35$$35$302:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT][VV$35$$35$305:=lq_tmp$36$x$35$$35$308]} -> {lq_tmp$x##298 : Bool | Prop lq_tmp$x##298 <=> lq_tmp$x##303 == lq_tmp$x##304}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":8,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.lAssert","lq_tmp$x##414:{v##4 : Bool | Prop v##4} -> {v##4 : Bool | Prop v##4}"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":68,"startCol":13,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["GHC.Err.error","lq_tmp$x##355:[Char] -> a"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":10,"startCol":7,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["str","{VV : [Char] | false}"]]],[{"spanInfo":{"startLine":33,"endLine":33,"endCol":67,"startCol":20,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##332 : [{lq_tmp$x##340 : Char^\"lq_tmp$x##339\" | $k_$35$$35$338[lq_tmp$36$x$35$$35$336:=str$35$$35$aXp][lq_tmp$36$x$35$$35$335:=lq_anf$36$$35$$35$d10I][VV$35$$35$337:=lq_tmp$36$x$35$$35$340]}] | len lq_tmp$x##332 == len lq_anf$##d10I + len str##aXp}"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":19,"startCol":12,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"{lq_tmp$x##497 : lq_tmp$x##498:{lq_tmp$x##495 : Bool | Prop lq_tmp$x##495} -> {lq_tmp$x##496 : Bool | Prop lq_tmp$x##496} | lq_tmp$x##497 == Assert.lAssert##rlA}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":31,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##525 : Bool | Prop lq_tmp$x##525 <=> lq_anf$##d10X == lq_anf$##d10Y}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":33,"startCol":18,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##372 : [Char] | lq_tmp$x##372 ~~ lq_anf$##d10K\n                          && len lq_tmp$x##372 == strLen lq_anf$##d10K}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":29,"startCol":27,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##530:{lq_tmp$x##535 : Integer^\"lq_tmp$x##534\" | $k_$35$$35$533[lq_tmp$36$x$35$$35$529:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT][VV$35$$35$532:=lq_tmp$36$x$35$$35$535]} -> lq_tmp$x##531:{lq_tmp$x##535 : Integer^\"lq_tmp$x##534\" | $k_$35$$35$533[lq_tmp$36$x$35$$35$529:=GHC.Integer.Type.$36$fEqInteger$35$$35$rIT][VV$35$$35$532:=lq_tmp$36$x$35$$35$535]} -> {lq_tmp$x##525 : Bool | Prop lq_tmp$x##525 <=> lq_tmp$x##530 == lq_tmp$x##531}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":31,"startCol":19,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##582:Int -> {lq_tmp$x##586 : Double^\"lq_tmp$x##585\" | lq_tmp$x##586 == lq_tmp$x##582}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":19,"startCol":12,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"{lq_tmp$x##543 : lq_tmp$x##544:{lq_tmp$x##541 : Bool | Prop lq_tmp$x##541} -> {lq_tmp$x##542 : Bool | Prop lq_tmp$x##542} | lq_tmp$x##543 == Assert.lAssert##rlA}"]]],[{"spanInfo":{"startLine":24,"endLine":24,"endCol":41,"startCol":11,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["GHC.Err.error","lq_tmp$x##405:[Char] -> a"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":9,"startCol":8,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["n","Double"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":36,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##258 : Integer | lq_tmp$x##258 == 3}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":34,"startCol":24,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##295 : Integer | lq_tmp$x##295 == 2}"]]],[{"spanInfo":{"startLine":89,"endLine":89,"endCol":7,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.divide","lq_tmp$x##547:Double -> lq_tmp$x##548:{v##8 : Int | v##8 /= 0} -> Double"]]],[{"spanInfo":{"startLine":73,"endLine":73,"endCol":7,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.propOk","{VV##455 : Bool^\"lq_tmp$x##457\" | $k_$35$$35$456}"]]],[{"spanInfo":{"startLine":79,"endLine":79,"endCol":26,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["lq_anf$","{lq_tmp$x##516 : Integer^\"lq_tmp$x##515\" | lq_tmp$x##516 == lq_anf$##d10V + lq_anf$##d10W}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":27,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[[null,"lq_tmp$x##286:Integer -> lq_tmp$x##287:Integer -> {lq_tmp$x##289 : Integer^\"lq_tmp$x##288\" | lq_tmp$x##289 == lq_tmp$x##286 + lq_tmp$x##287}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":22,"startCol":1,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true},[["Assert.one_plus_one_eq_three","{v##4 : Bool | Prop v##4}"]]]],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Bool | VV == ?e}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV}\n \n  In Context\n    ?c := {?c : GHC.Integer.Type.Integer | ?c == 1}\n\n    ?e := {?e : GHC.Types.Bool | Prop ?e <=> ?a == ?b}\n\n    ?b := {?b : GHC.Integer.Type.Integer | ?b == 4}\n\n    ?d := {?d : GHC.Integer.Type.Integer | ?d == 1}\n\n    ?a := {?a : GHC.Integer.Type.Integer | ?a == ?c + ?d}","pos":{"spanInfo":{"startLine":79,"endLine":79,"endCol":31,"startCol":21,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Bool | Prop VV <=> ?a == ?b}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV}\n \n  In Context\n    ?c := {?c : GHC.Integer.Type.Integer | ?c == 1}\n\n    ?b := {?b : GHC.Integer.Type.Integer | ?b == 3}\n\n    ?d := {?d : GHC.Integer.Type.Integer | ?d == 1}\n\n    ?a := {?a : GHC.Integer.Type.Integer | ?a == ?c + ?d}","pos":{"spanInfo":{"startLine":58,"endLine":58,"endCol":36,"startCol":26,"filename":"/home/cse230/Desktop/Hw4/flycheck_Assert.lhs"},"realSpan":true}}]}}